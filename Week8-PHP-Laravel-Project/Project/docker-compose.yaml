services:
  server:
    # https://hub.docker.com/_/nginx
    image: 'nginx:stable-alpine'
    ports:
      - '8000:80'
    # To Proviode configuration to the nginx server
    # that we want php code to show on the web
    # we need to create a conf file and pass it to
    # the nginx container
    volumes:
      # ro -- read only 
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      # Binding our source code to nginx so that nginx has access to the code
      - ./src:/var/www/html
    depends_on:
      - php
      - mysql

  php:
    build:
      context: .
      dockerfile: Dockerfiles/php.dockerfile
    volumes:
      # delegated makes container view of mount less authorative
      # and there will be delay in things getting written from container
      # to host machine.
      # We would not want container to continously writing on the host.
      - ./src:/var/www/html:delegated
    #ports:
      # PHP container listens of port 9000 and nginx needs 3000 exposed
      # since we mentioned that in the conf file
      # But When we mention this here, this will mean port 3000 is exposed on host
      # Not for nginx container to communicate with PHP directly.
      # Hence, we need to change 3000 to 9000 in nginx conf file, and no need to mention
      # anything here.
    #  - '3000:9000'
  mysql:
    image: mysql:5.7
    env_file:
      # In the env file, we took the env variables from
      # mysql dockerhub page and provide db name, etc of
      # our own choice
      - ./env/mysql.env
  # composer:
  #   build: 
  #     context: .
  #     dockerfile: Dockerfiles/composer.dockerfile      
  #   volumes:
  #     - ./src:/var/www/html
  artisan:
    build: 
      # requires PHP image so, we will be using same dockerfile
      # as we are using for php service
      context: .
      dockerfile: Dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html
    # putting entrypoint here, overrides the entrypoint in the dockerfile
    # or image being used. Or appends to it if already not present
    entrypoint: ["php", "/var/www/html/artisan", ]
  npm:
    image: node:14
    working_dir: /var/www/html
    entrypoint: ["npm"]
    volumes:
      - ./src/:/var/www/html