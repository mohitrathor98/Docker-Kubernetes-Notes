# parent of containers
services:
  # container names, can be anything -- just a label
  # These names can be used to communicate with the other containers
  # in this compose network.
  mongodb:
    image: 'mongo'
    volumes:
      - mongodb_data:/data/db
    
    # This way we can provide custom container names 
    #container_name: mongo
    environment:
      ## We can write these key-value pairs in two ways
      ## 1. variable=value ==> In this case we need to provide '-'
      ## 2. variable: value ==> In this case we don't need to provide '-'
      ##                    ==> This : creates a yaml object.

      #- MONGO_INITDB_ROOT_USERNAME=mongoadmin
      #- MONGO_INITDB_ROOT_PASSWORD=secret
      MONGO_INITDB_ROOT_USERNAME:mongoadmin
      MONGO_INITDB_ROOT_PASSWORD:secret

    env_file:
      # We can also provide the environment variables using env files
      - ./env/mongo.env

  backend:
    # using build we can provide a location of dockerfile from which compose
    # can build an image.
    build: ../Week5-Multi-Container-Application-With-Docker/Python-App-Code/Backend
    
    # Below way can be used to provide a specific docker file name
    # build:
    #  context: ../Week5-Multi-Container-Application-With-Docker/Python-App-Code/Backend
    #  dockerfile: dockerfile
    
    # Providing argument to the docker file
    #args:
    #  ARGUMENT_TO_DOCKERFILE: ${value}

    ports:
      - '5000:5000'
    
    volumes:
      # Bind mount
      - ../Week5-Multi-Container-Application-With-Docker/Python-App-Code/Backend:/app
    env_file:
      - ./env/backend.env
    
    # This is used to specify that this container or service is dependent
    # upon another. So, please start below before starting the current one.
    depends_on:
      - mongodb

  frontend:
    build: ../Week5-Multi-Container-Application-With-Docker/Python-App-Code/Frontend/react-application

    ports:
      - '3000:3000'

    volumes:
      - ../Week5-Multi-Container-Application-With-Docker/Python-App-Code/Frontend/react-application/src:/app/src

    depends_on:
      - backend
    
    # To run this specific container in attached mode
    # The compose will run in detached mode if provided `-d`
    # but if shell needs to be kept open for app to run we can do this
    # stdin_open: true
    # tty: true

# For named volumes, we need to specify at the end of 
# the compose file
# No need to do such things for anonymous and bind mounts
volumes:
  data: